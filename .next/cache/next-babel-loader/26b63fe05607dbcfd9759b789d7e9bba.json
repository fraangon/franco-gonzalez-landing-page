{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/francogonzalez/Documents/Trabajo/franco-gonzalez-landing-page/components/projects/projects_items/projects_items.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './projects_items.module.css';\nimport dynamic from 'next/dynamic';\nimport { posts } from '../../../posts/posts.js';\nimport { useState, useEffect } from \"react\";\nimport { getWindowWidth, getWindowHeight } from '../../window/window_dimensions.js';\nimport { Frame, Stack, useMotionValue } from \"framer\"; //const Frame = dynamic( () => import('framer').then((mod) => mod.Frame), { ssr: false } );\n//const Stack = dynamic( () => import('framer').then((mod) => mod.Stack), { ssr: false } );\n//const useMotionValue = dynamic( () => import('framer').then((mod) => mod.useMotionValue), { ssr: false } );\n\nexport default function ProjectsItems() {\n  var _this = this;\n\n  var _useState = useState(false),\n      ssrDone = _useState[0],\n      setSsrDone = _useState[1];\n\n  useEffect(function () {\n    setSsrDone(true);\n  }, []); // width consts\n\n  var widthLayer = Math.min(getWindowWidth(), 1920);\n  var widthItem = 40 * 0.01 * getWindowHeight();\n  var widthItemAndGap = widthItem + 40;\n  var lengthItems = posts.length;\n  var widthSliderTotal = (lengthItems - 1) * widthItemAndGap + widthItem; // slider controller\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      xOffset = _React$useState2[0],\n      setXOffset = _React$useState2[1];\n\n  var position = useMotionValue(0);\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, \"HOLA\");\n\n  if (ssrDone) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }\n    }, __jsx(Frame, {\n      name: \"Mask\",\n      overflow: \"hidden\",\n      height: \"50vh\",\n      width: widthLayer - 200,\n      x: -100,\n      backgroundColor: \"#200a48\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, __jsx(Stack, {\n      size: 100,\n      direction: \"horizontal\",\n      alignment: \"start\",\n      gap: \"40\",\n      distribution: \"start\",\n      x: 100 + -0 * (40 + widthItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, posts.map(function (aPost) {\n      return __jsx(Frame, {\n        key: aPost.title,\n        backgroundColor: \"#180233\",\n        height: '50vh',\n        width: '40vh',\n        className: styles.project_item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        className: styles.project_item_text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, __jsx(\"h3\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, aPost.title), __jsx(\"h4\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, aPost.type)), __jsx(\"img\", {\n        src: \"/Min_projects.png\",\n        alt: \"min\",\n        className: styles.img_min,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }));\n    }))), __jsx(Frame, {\n      name: \"Mask Izq\",\n      width: 120,\n      backgroundColor: \"#200a48\",\n      height: \"55vh\",\n      x: -180,\n      y: \"-2.5vh\",\n      style: {\n        filter: 'blur(15px)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), __jsx(Frame, {\n      name: \"Mask Der\",\n      width: 120,\n      backgroundColor: \"#200a48\",\n      height: \"55vh\",\n      x: widthLayer - 340,\n      y: \"-2.5vh\",\n      style: {\n        filter: 'blur(15px)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), __jsx(Frame, {\n      name: 'Rail',\n      width: widthLayer - 400,\n      height: '1.6vh',\n      radius: 0,\n      position: \"relative\",\n      left: '0px',\n      background: \"rgba(255,255,255,.1)\",\n      top: '55vh',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, __jsx(Frame, {\n      name: 'Knob',\n      width: '8%',\n      height: '1.6vh',\n      radius: 0,\n      position: \"relative\",\n      left: '0%',\n      background: \"rgba(255,255,255,.1)\",\n      drag: \"x\",\n      dragConstraints: {\n        left: 0,\n        right: (widthLayer - 400) * 0.92\n      },\n      dragElastic: 0,\n      dragMomentum: false,\n      x: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })));\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \" Loading... \");\n}\n/*\n{items.map(aItem => (\n        \n        <Frame key={aItem.name} backgroundColor='#180233' height={'50vh'} width={'40vh'} className={styles.project_item}>\n        \n            \n            <div className={styles.project_item_text}>\n            <h3>{aItem.name}</h3>\n            <h4>{aItem.type}</h4>\n            </div>\n\n            <img src='/Min_projects.png' alt='min' className={styles.img_min}></img>\n\n        </Frame>\n            \n        ))}\n\n*/","map":{"version":3,"sources":["/Users/francogonzalez/Documents/Trabajo/franco-gonzalez-landing-page/components/projects/projects_items/projects_items.js"],"names":["styles","dynamic","posts","useState","useEffect","getWindowWidth","getWindowHeight","Frame","Stack","useMotionValue","ProjectsItems","ssrDone","setSsrDone","widthLayer","Math","min","widthItem","widthItemAndGap","lengthItems","length","widthSliderTotal","React","xOffset","setXOffset","position","map","aPost","title","project_item","project_item_text","type","img_min","filter","left","right"],"mappings":"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","sourcesContent":["import styles from './projects_items.module.css'\nimport dynamic from 'next/dynamic'\nimport {posts} from '../../../posts/posts.js'\nimport { useState, useEffect } from \"react\";\nimport { getWindowWidth, getWindowHeight } from '../../window/window_dimensions.js';\nimport { Frame, Stack, useMotionValue } from \"framer\";\n\n\n//const Frame = dynamic( () => import('framer').then((mod) => mod.Frame), { ssr: false } );\n//const Stack = dynamic( () => import('framer').then((mod) => mod.Stack), { ssr: false } );\n//const useMotionValue = dynamic( () => import('framer').then((mod) => mod.useMotionValue), { ssr: false } );\n\n\nexport default function ProjectsItems() { \n  \n  const [ssrDone, setSsrDone ] = useState(false);\n    \n  useEffect(() => {\n      setSsrDone(true)\n  }, [])\n\n  // width consts\n  const widthLayer = Math.min( getWindowWidth(), 1920 )\n  const widthItem = ( 40 * 0.01 * getWindowHeight() );\n  const widthItemAndGap = widthItem + 40;\n  const lengthItems = posts.length;\n  const widthSliderTotal = ( (lengthItems-1) * widthItemAndGap + widthItem)\n\n  // slider controller\n  const [xOffset, setXOffset] = React.useState(0);\n  const position = useMotionValue(0);\n  \n  return <h1>HOLA</h1>\n  if(ssrDone) {\n\n    return ( <div>\n        <Frame\n          name={\"Mask\"}\n          overflow={\"hidden\"}\n          height= '50vh'\n          width= {widthLayer - 200}\n          x={-100}\n          backgroundColor='#200a48'\n        >\n\n          <Stack \n            size={100} \n            direction=\"horizontal\" \n            alignment=\"start\" \n            gap='40' \n            distribution=\"start\"  \n            x={ (100) + ( -0 * (40 + widthItem)) }\n          >\n\n            {posts.map(aPost => ( \n              <Frame key={aPost.title} backgroundColor='#180233' height={'50vh'} width={'40vh'} className={styles.project_item}>\n                \n                <div className={styles.project_item_text}>\n                <h3>{aPost.title}</h3>\n                <h4>{aPost.type}</h4>\n                </div>\n\n                <img src='/Min_projects.png' alt='min' className={styles.img_min}></img>\n\n            </Frame>\n            ))}\n\n          </Stack>\n        </Frame>\n\n        <Frame\n          name={\"Mask Izq\"}\n          width= {120}\n          backgroundColor='#200a48'\n          height= '55vh'\n          x={-180}\n          y='-2.5vh'\n          style={{\n            filter: 'blur(15px)',\n          }}\n        />\n\n        <Frame\n          name={\"Mask Der\"}\n          width= {120}\n          backgroundColor='#200a48'\n          height= '55vh'\n          x={ widthLayer - 340 }\n          y='-2.5vh'\n          style={{\n            filter: 'blur(15px)',\n          }}\n        />\n        \n        <Frame \n            name={'Rail'}\n            width={ widthLayer - 400 }\n            height={'1.6vh'}\n            radius={0}\n            position={\"relative\"}\n            left={'0px'}\n            background={\"rgba(255,255,255,.1)\"}\n            top={'55vh'}\n        >\n            <Frame\n                name={'Knob'}\n                width={'8%'}\n                height={'1.6vh'}\n                radius={0}\n                position={\"relative\"}\n                left={'0%'}\n                background={\"rgba(255,255,255,.1)\"}\n                drag={\"x\"}\n                dragConstraints={{ \n                left: 0, \n                right:  (widthLayer - 400) * 0.92\n                }}\n                dragElastic={0}\n                dragMomentum={false}\n                x={0}\n            ></Frame>\n        </Frame>\n\n        </div>);\n\n\n  } \n  return (<div> Loading... </div>)\n  \n}\n\n/*\n{items.map(aItem => (\n        \n        <Frame key={aItem.name} backgroundColor='#180233' height={'50vh'} width={'40vh'} className={styles.project_item}>\n        \n            \n            <div className={styles.project_item_text}>\n            <h3>{aItem.name}</h3>\n            <h4>{aItem.type}</h4>\n            </div>\n\n            <img src='/Min_projects.png' alt='min' className={styles.img_min}></img>\n\n        </Frame>\n            \n        ))}\n\n*/"]},"metadata":{},"sourceType":"module"}