{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { getWindowWidth, getWindowHeight } from '../../window/window_dimensions.js';\nimport { useState, useEffect } from \"react\";\nimport dynamic from 'next/dynamic';\nimport ParallaxMousemove from 'react-parallax-mousemove';\nimport { motion } from 'framer-motion';\nimport { animationBG } from './bg_animation';\nvar Frame = dynamic(function () {\n  return import('framer').then(function (mod) {\n    return mod.Frame;\n  });\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('framer')];\n    },\n    modules: ['framer']\n  }\n});\nexport default function Bg() {\n  var _useState = useState(false),\n      ssrDone = _useState[0],\n      setSsrDone = _useState[1];\n\n  useEffect(function () {\n    setSsrDone(true);\n  }, []);\n  var widthBg = getWindowHeight() * (7680 / 4320);\n  var heightBg = getWindowHeight(); // Styles for the mouse paralax efect\n\n  var style = {\n    outter: {\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      width: '100%',\n      position: 'relative',\n      overflow: 'hidden',\n      marginLeft: 'auto',\n      marginRigth: 'auto',\n      pointerEvents: 'none'\n    },\n    infoLayerStyle: {\n      position: 'relative'\n    },\n    bgLayerStyle: {\n      position: 'absolute',\n      height: '100%'\n    }\n  };\n\n  if (ssrDone) {\n    return __jsx(motion.div, {\n      exit: \"exit\",\n      initial: \"initial\",\n      animate: \"animate\",\n      variants: animationBG\n    }, __jsx(ParallaxMousemove, {\n      containerStyle: style.outter,\n      fullHeight: true\n    }, __jsx(ParallaxMousemove.Layer, {\n      layerStyle: style.bgLayerStyle,\n      config: {\n        xFactor: -0.03,\n        yFactor: 0.03,\n        springSettings: {\n          stiffness: 150,\n          damping: 50\n        }\n      }\n    }, __jsx(Frame, {\n      height: heightBg,\n      width: widthBg,\n      top: 0,\n      left: (getWindowWidth() - widthBg) / 2,\n      image: \"/background_parallax/shadow.png\",\n      style: {\n        backgroundColor: 'rgba(0, 0, 0, 0)',\n        mixBlendMode: \"multiply\"\n      }\n    })), __jsx(ParallaxMousemove.Layer, {\n      layerStyle: style.bgLayerStyle,\n      config: {\n        xFactor: 0.05,\n        yFactor: -0.03,\n        springSettings: {\n          stiffness: 150,\n          damping: 50\n        }\n      }\n    }, __jsx(Frame, {\n      height: getWindowHeight(),\n      width: getWindowHeight() * (7680 / 4320),\n      top: 0,\n      left: (getWindowWidth() - widthBg) / 2,\n      image: \"/background_parallax/layer_3.png\",\n      style: {\n        backgroundColor: 'rgba(0, 0, 0, 0)'\n      }\n    })), __jsx(ParallaxMousemove.Layer, {\n      layerStyle: style.bgLayerStyle,\n      config: {\n        xFactor: 0.10,\n        yFactor: -0.06,\n        springSettings: {\n          stiffness: 150,\n          damping: 50\n        }\n      }\n    }, __jsx(Frame, {\n      height: getWindowHeight(),\n      width: getWindowHeight() * (7680 / 4320),\n      top: 0,\n      left: (getWindowWidth() - widthBg) / 2,\n      image: \"/background_parallax/layer_2.png\",\n      style: {\n        backgroundColor: 'rgba(0, 0, 0, 0)'\n      }\n    })), __jsx(ParallaxMousemove.Layer, {\n      layerStyle: style.bgLayerStyle,\n      config: {\n        xFactor: 0.15,\n        yFactor: -0.09,\n        springSettings: {\n          stiffness: 150,\n          damping: 50\n        }\n      }\n    }, __jsx(Frame, {\n      height: getWindowHeight(),\n      width: getWindowHeight() * (7680 / 4320),\n      top: 0,\n      left: (getWindowWidth() - widthBg) / 2,\n      image: \"/background_parallax/layer_1.png\",\n      style: {\n        backgroundColor: 'rgba(0, 0, 0, 0)'\n      }\n    }))));\n  }\n\n  return __jsx(\"div\", null, \"Loading...\");\n}\n/*\n\n*/","map":null,"metadata":{},"sourceType":"module"}