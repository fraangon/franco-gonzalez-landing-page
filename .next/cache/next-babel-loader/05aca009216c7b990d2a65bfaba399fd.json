{"ast":null,"code":"var _jsxFileName = \"/Users/francogonzalez/Documents/Trabajo/franco-gonzalez-landing-page/components/window/window_dimensions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nexport default function WindowDimensions() {\n  var hasWindow = true;\n\n  function getWindowDimensions() {\n    var width = hasWindow ? window.innerWidth : null;\n    var height = hasWindow ? window.innerHeight : null;\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  var _useState = useState(getWindowDimensions()),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    if (hasWindow) {\n      var handleResize = function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      };\n\n      window.addEventListener('resize', handleResize);\n      return function () {\n        return window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, [hasWindow]);\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height,\n      width = _useWindowDimensions.width;\n  /* you can also use default values or alias to use only one prop: */\n  // const { height: windowHeight = 480 } useWindowDimensions();\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"width: \", width, \" ~ height: \", height);\n}","map":{"version":3,"sources":["/Users/francogonzalez/Documents/Trabajo/franco-gonzalez-landing-page/components/window/window_dimensions.js"],"names":["useState","useEffect","WindowDimensions","hasWindow","getWindowDimensions","width","window","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAEzC,MAAMC,SAAS,OAAf;;AAEA,WAASC,mBAAT,GAA+B;AAC7B,QAAMC,KAAK,GAAGF,SAAS,GAAGG,MAAM,CAACC,UAAV,GAAuB,IAA9C;AACA,QAAMC,MAAM,GAAGL,SAAS,GAAGG,MAAM,CAACG,WAAV,GAAwB,IAAhD;AACA,WAAO;AACLJ,MAAAA,KAAK,EAALA,KADK;AAELG,MAAAA,MAAM,EAANA;AAFK,KAAP;AAID;;AAXwC,kBAaOR,QAAQ,CAACI,mBAAmB,EAApB,CAbf;AAAA,MAalCM,gBAbkC;AAAA,MAahBC,mBAbgB;;AAezCV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIE,SAAJ,EAAe;AAAA,UACJS,YADI,GACb,SAASA,YAAT,GAAwB;AACtBD,QAAAA,mBAAmB,CAACP,mBAAmB,EAApB,CAAnB;AACD,OAHY;;AAKbE,MAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,aAAO;AAAA,eAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,OAAP;AACD;AACF,GATQ,EASN,CAACT,SAAD,CATM,CAAT;;AAfyC,6BA0BfY,mBAAmB,EA1BJ;AAAA,MA0BjCP,MA1BiC,wBA0BjCA,MA1BiC;AAAA,MA0BzBH,KA1ByB,wBA0BzBA,KA1ByB;AA2BzC;AACA;;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUA,KADV,iBAC4BG,MAD5B,CADF;AAKD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function WindowDimensions() {\n\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    if (hasWindow) {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  const { height, width } = useWindowDimensions();\n  /* you can also use default values or alias to use only one prop: */\n  // const { height: windowHeight = 480 } useWindowDimensions();\n\n  return (\n    <div>\n      width: {width} ~ height: {height}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}