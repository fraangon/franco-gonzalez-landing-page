{"ast":null,"code":"var _jsxFileName = \"/Users/francogonzalez/Documents/Trabajo/franco-gonzalez-landing-page/pages/projects/[title].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport NavBar from '../../components/navbar/navbar';\nimport Layout, { siteTitle } from '../../components/layout/layout';\nimport { posts } from '../../posts/posts.js';\nexport default function Project(props) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"hola\"));\n}\nexport async function getStaticPaths() {\n  const paths = getAllPostsPaths();\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  //postData = getPostFromPath(params.title)\n  return {\n    props: {\n      hola: \"holasss\"\n    }\n  };\n}\n\nfunction getAllPostsPaths() {\n  return posts.map(aPost => {\n    return {\n      params: {\n        id: aPost.title.replace(' ', '_').toLowerCase()\n      }\n    };\n  });\n}\n\nfunction titleToPath(aTitle) {\n  return aTitle.replace(' ', '_').toLowerCase();\n}\n/*\nfunction pathToTitle( aPath ) {\n    return aPath.replace('_', ' ')\n}\n\nfunction getPostFromPath( aPath ){\n    postData = posts.filter( (x) => {\n        return x.title.toLowerCase() == pathToTitle( aPath );\n    })\n}\n*/","map":{"version":3,"sources":["/Users/francogonzalez/Documents/Trabajo/franco-gonzalez-landing-page/pages/projects/[title].js"],"names":["NavBar","Layout","siteTitle","posts","Project","props","getStaticPaths","paths","getAllPostsPaths","fallback","getStaticProps","params","hola","map","aPost","id","title","replace","toLowerCase","titleToPath","aTitle"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,gCAAlC;AACA,SAAQC,KAAR,QAAoB,sBAApB;AAGA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACnC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AAMH;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,KAAK,GAAGC,gBAAgB,EAA9B;AACA,SAAO;AACHD,IAAAA,KADG;AAEHE,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH;AACD,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC7C;AACA,SAAO;AACHN,IAAAA,KAAK,EAAE;AACHO,MAAAA,IAAI,EAAG;AADJ;AADJ,GAAP;AAKH;;AAED,SAASJ,gBAAT,GAA4B;AACxB,SAAOL,KAAK,CAACU,GAAN,CAAWC,KAAK,IAAI;AACvB,WAAO;AACHH,MAAAA,MAAM,EAAE;AACJI,QAAAA,EAAE,EAAED,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,EAA8BC,WAA9B;AADA;AADL,KAAP;AAKH,GANM,CAAP;AAOH;;AAED,SAASC,WAAT,CAAsBC,MAAtB,EAA+B;AAC3B,SAAOA,MAAM,CAACH,OAAP,CAAe,GAAf,EAAoB,GAApB,EAAyBC,WAAzB,EAAP;AACH;AAED","sourcesContent":["import NavBar from '../../components/navbar/navbar'\nimport Layout, { siteTitle } from '../../components/layout/layout'\nimport {posts} from '../../posts/posts.js'\n\n\nexport default function Project(props) {\n    return ( \n        <div>\n            <NavBar/>\n            <h1>hola</h1>\n        </div> \n    )\n}\n\nexport async function getStaticPaths() {\n    const paths = getAllPostsPaths()\n    return {\n        paths,\n        fallback: false\n    }\n}\nexport async function getStaticProps({ params }) {\n    //postData = getPostFromPath(params.title)\n    return {\n        props: {\n            hola : \"holasss\"\n        }\n    }\n}\n\nfunction getAllPostsPaths() {\n    return posts.map( aPost => {\n        return {\n            params: {\n                id: aPost.title.replace(' ', '_').toLowerCase()\n            }\n        }\n    })\n}\n\nfunction titleToPath( aTitle ) {\n    return aTitle.replace(' ', '_').toLowerCase()\n}\n\n/*\nfunction pathToTitle( aPath ) {\n    return aPath.replace('_', ' ')\n}\n\nfunction getPostFromPath( aPath ){\n    postData = posts.filter( (x) => {\n        return x.title.toLowerCase() == pathToTitle( aPath );\n    })\n}\n*/"]},"metadata":{},"sourceType":"module"}