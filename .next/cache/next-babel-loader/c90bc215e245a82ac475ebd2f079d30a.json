{"ast":null,"code":"var _jsxFileName = \"/Users/francogonzalez/Documents/Trabajo/franco-gonzalez-landing-page/pages/projects/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport NavBar from '../../components/navbar/navbar';\nimport ProjectPage from '../../components/projectPage/projectPage';\nimport Layout, { siteTitle } from '../../components/layout/layout';\nimport { posts } from '../../posts/posts.js';\nexport default function Project(props) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(NavBar, {\n    selected: \"PROJECTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), __jsx(ProjectPage, {\n    dataProject: props.dataProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }));\n}\nexport async function getStaticPaths() {\n  const paths = getAllIds();\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  return {\n    props: {\n      dataProject: getDataProjectFromId(params.id)\n    }\n  };\n}\n\nfunction getAllIds() {\n  return posts.map(aPost => {\n    return {\n      params: {\n        id: aPost.title.replace(' ', '_').toLowerCase()\n      }\n    };\n  });\n}\n\nfunction titleToId(aTitle) {\n  return aTitle.replace(' ', '_').toLowerCase();\n}\n\nfunction idIsPost(aId, aPost) {\n  return aPost.title.toLowerCase() == aId.replace('_', ' ');\n}\n\nfunction getDataProjectFromId(aId) {\n  const fintredPosts = posts.filter(aPost => {\n    return idIsPost(aId, aPost);\n  });\n  return fintredPosts[0];\n}","map":{"version":3,"sources":["/Users/francogonzalez/Documents/Trabajo/franco-gonzalez-landing-page/pages/projects/[id].js"],"names":["NavBar","ProjectPage","Layout","siteTitle","posts","Project","props","dataProject","getStaticPaths","paths","getAllIds","fallback","getStaticProps","params","getDataProjectFromId","id","map","aPost","title","replace","toLowerCase","titleToId","aTitle","idIsPost","aId","fintredPosts","filter"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,gCAAlC;AACA,SAAQC,KAAR,QAAoB,sBAApB;AAGA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACnC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,WAAD;AAAa,IAAA,WAAW,EAAIA,KAAK,CAACC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,KAAK,GAAGC,SAAS,EAAvB;AACA,SAAO;AACHD,IAAAA,KADG;AAEHE,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH;AACD,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,SAAO;AACHP,IAAAA,KAAK,EAAE;AACHC,MAAAA,WAAW,EAAGO,oBAAoB,CAAED,MAAM,CAACE,EAAT;AAD/B;AADJ,GAAP;AAKH;;AAED,SAASL,SAAT,GAAqB;AACjB,SAAON,KAAK,CAACY,GAAN,CAAWC,KAAK,IAAI;AACvB,WAAO;AACHJ,MAAAA,MAAM,EAAE;AACJE,QAAAA,EAAE,EAAEE,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,EAA8BC,WAA9B;AADA;AADL,KAAP;AAKH,GANM,CAAP;AAOH;;AAED,SAASC,SAAT,CAAoBC,MAApB,EAA6B;AACzB,SAAOA,MAAM,CAACH,OAAP,CAAe,GAAf,EAAoB,GAApB,EAAyBC,WAAzB,EAAP;AACH;;AAED,SAASG,QAAT,CAAmBC,GAAnB,EAAyBP,KAAzB,EAAgC;AAC5B,SAAOA,KAAK,CAACC,KAAN,CAAYE,WAAZ,MAA6BI,GAAG,CAACL,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAApC;AACH;;AAED,SAASL,oBAAT,CAA+BU,GAA/B,EAAoC;AAChC,QAAMC,YAAY,GAAIrB,KAAK,CAACsB,MAAN,CACjBT,KAAD,IAAW;AAAE,WAAOM,QAAQ,CAACC,GAAD,EAAMP,KAAN,CAAf;AAA6B,GADxB,CAAtB;AAIA,SAAOQ,YAAY,CAAC,CAAD,CAAnB;AACH","sourcesContent":["import NavBar from '../../components/navbar/navbar'\nimport ProjectPage from '../../components/projectPage/projectPage'\nimport Layout, { siteTitle } from '../../components/layout/layout'\nimport {posts} from '../../posts/posts.js'\n\n\nexport default function Project(props) {\n    return ( \n        <div>\n            <NavBar selected='PROJECTS'/>\n            <ProjectPage dataProject = {props.dataProject} />\n        </div> \n    )\n}\n\nexport async function getStaticPaths() {\n    const paths = getAllIds()\n    return {\n        paths,\n        fallback: false\n    }\n}\nexport async function getStaticProps({ params }) {\n    return {\n        props: {\n            dataProject : getDataProjectFromId( params.id )\n        }\n    }\n}\n\nfunction getAllIds() {\n    return posts.map( aPost => {\n        return {\n            params: {\n                id: aPost.title.replace(' ', '_').toLowerCase()\n            }\n        }\n    })\n}\n\nfunction titleToId( aTitle ) {\n    return aTitle.replace(' ', '_').toLowerCase()\n}\n\nfunction idIsPost( aId , aPost) {\n    return aPost.title.toLowerCase() == aId.replace('_', ' ')\n}\n\nfunction getDataProjectFromId( aId ){\n    const fintredPosts =  posts.filter( \n        (aPost) => { return idIsPost(aId, aPost) }\n    );\n\n    return fintredPosts[0];\n}\n"]},"metadata":{},"sourceType":"module"}