{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport NavBar from '../../components/navbar/navbar';\nimport Layout, { siteTitle } from '../../components/layout/layout';\nimport { posts } from '../../posts/posts.js';\nimport dynamic from 'next/dynamic';\nimport Projects from '../../components/projects/projects/projects';\nconst ProjectPage = dynamic(() => import('../../components/project_page/project_page'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/project_page/project_page')],\n    modules: ['../../components/project_page/project_page']\n  }\n});\nexport default function Project(props) {\n  return __jsx(\"div\", null, __jsx(\"h1\", null, props.id), __jsx(ProjectPage, {\n    dataProject: props.dataProject\n  }), __jsx(\"h1\", null, props.id), __jsx(NavBar, {\n    selected: \"PROJECTS\"\n  }));\n}\nexport async function getStaticPaths() {\n  const paths = getAllIds();\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  return {\n    props: {\n      dataProject: getDataProjectFromId(params.id)\n    }\n  };\n}\n\nfunction getAllIds() {\n  return posts.map(aPost => {\n    return {\n      params: {\n        id: aPost.title.replace(' ', '_').toLowerCase()\n      }\n    };\n  });\n}\n\nfunction titleToId(aTitle) {\n  return aTitle.replace(' ', '_').toLowerCase();\n}\n\nfunction idIsPost(aId, aPost) {\n  return aPost.title.toLowerCase() == aId.replace('_', ' ');\n}\n\nfunction getDataProjectFromId(aId) {\n  const fintredPosts = posts.filter(aPost => {\n    return idIsPost(aId, aPost);\n  });\n  return fintredPosts[0];\n}","map":null,"metadata":{},"sourceType":"module"}